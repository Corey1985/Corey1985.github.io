////////////////////////////////////////////////////////////////////////////////
// range ///////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
//return a range of numbers in an array
//include an optional 3rd element that is an alternate incrementer
function range(minNum, maxNum, skipInc) {
  let rangeSum = [];
   if (minNum === maxNum || skipInc === -1){
       rangeSum;
   }
   else{ 
    if (skipInc == null){
          skipInc = 1;
    } 
      for(let i = minNum; i <= maxNum; i += skipInc){
        if(skipInc > 0){
            rangeSum.push(i); 
        } 
      else{
          for(let i = minNum; i >= maxNum; i--){
            rangeSum.push(i);
          }
        }
      }
    }
   return rangeSum; 
}

////////////////////////////////////////////////////////////////////////////////
// sum /////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
//return the sum of an array

function sum(array) {
  let total = 0;
  for(let i = 0; i < array.length;i++){
    total += array[i];
  }
  return total;
}

////////////////////////////////////////////////////////////////////////////////
// reverseArray ////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
//reverse an array
//will need a new array that the original variables will be placed into
//return new array
function reverseArray(array) {
  let revArr = [];
    for(let i = array.length -1; i >= 0; i--){
      revArr.push(array[i]);
    }
    return revArr;
}

////////////////////////////////////////////////////////////////////////////////
// reverseArrayInPlace /////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
//reverse the given array 
//must be the same array in reverse
function reverseArrayInPlace(array){
  return array.reverse();
}

////////////////////////////////////////////////////////////////////////////////
// arrayToList /////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
//convert array to an object
//use the index of the array as the key for the value of the indexed value
function arrayToList(array){
     let newList = null;
  for (var i = array.length - 1; i >= 0; i--)
    newList = {value: array[i], 
               rest: newList
              };
  return newList;
}

////////////////////////////////////////////////////////////////////////////////
// listToArray /////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
//loop through an object and add its values to a new array
//use a for in loop

function listToArray(list) {
  let newArr = [];
  for(let key in list){
    newArr.push(list[key]);
  }
  return newArr;
}

////////////////////////////////////////////////////////////////////////////////
// prepend /////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function prepend() {

}

////////////////////////////////////////////////////////////////////////////////
// nth /////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function nth() {

}

////////////////////////////////////////////////////////////////////////////////
// deepEqual ///////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function deepEqual() {

}

////////////////////////////////////////////////////////////////////////////////
// DON'T REMOVE THIS CODE //////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

if ((typeof process !== 'undefined') &&
  (typeof process.versions.node !== 'undefined')) {
  module.exports = {
    range,
    sum,
    reverseArray,
    reverseArrayInPlace,
    arrayToList,
    listToArray,
    prepend,
    nth,
    deepEqual,
  };
};
